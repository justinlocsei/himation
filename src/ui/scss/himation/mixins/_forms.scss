@import "himation/mixins/layout";
@import "himation/mixins/typography";
@import "himation/mixins/responsive";

// Apply button styles to a caller
@mixin himation--button {
  background-color: $himation--branding-primary-color;
  border: 1px solid $himation--branding-primary-color;
  box-sizing: border-box;
  color: $himation--branding-text-color;
  cursor: pointer;
  display: inline-block;

  &:hover,
  &:focus {
    background-color: lighten($himation--branding-primary-color, 5%);
    border-color: lighten($himation--branding-primary-color, 5%);
  }

  &:focus {
    box-shadow: 0 0 0 1px $himation--branding-text-color inset;
    outline: 0;
  }

  &:disabled {
    background-color: $himation--branding-secondary-color;
    border-color: $himation--branding-secondary-color;
    transition: background-color 0.75s;
  }
}

// Apply form-input styles to a caller that contains an input and a label
//
// This expects the caller to be a container for an checkbox or radio tag that
// is followed by a label tag.
//
// @param <length> $padding The padding to apply to the input
// @param <boolean> $is-stacked Whether the input is stacked with others
// @param <string> $label-display The display type to use for the label
@mixin himation--boolean-label-pair($padding, $is-stacked, $label-display) {

  input {
    @include himation--hide;
  }

  label {
    background-color: $himation--input-bg-color;
    box-sizing: border-box;
    cursor: pointer;
    display: $label-display;
    font-weight: $himation--font-weight-semi-bold;
    padding: $padding;

    @if $is-stacked {
      border-left: 1px solid $himation--input-bg-color;
    } @else {
      border: 1px solid $himation--input-bg-color;
      border-bottom-color: $himation--input-border-color;
    }
  }

  label:hover,
  input:focus + label {
    $_bg-color: mix($himation--form-field-bg-color, $himation--input-bg-color, 50%);

    background-color: $_bg-color;
    border-color: $_bg-color;

    @if not $is-stacked {
      border-bottom-color: $himation--input-border-color;
    }
  }

  input:focus + label {
    @if $is-stacked {
      border-left-color: darken($himation--input-border-color, 10%);
      box-shadow: 1px 0 0 darken($himation--input-border-color, 10%) inset;
    } @else {
      border-color: darken($himation--input-border-color, 10%);
    }
  }

  input:checked + label {
    background-color: $himation--input-active-bg-color;
    color: $himation--branding-text-color;

    @if $is-stacked {
      border-color: $himation--input-active-bg-color;
    } @else {
      border-color: $himation--input-active-border-color;
    }
  }

  input:disabled + label {
    cursor: not-allowed;
    opacity: 0.5;

    &:hover {
      background-color: $himation--input-bg-color;
    }
  }

  input:checked + label:hover,
  input:checked:focus + label {
    background-color: darken($himation--input-active-bg-color, 5%);
  }

  input:checked:focus + label {
    @if $is-stacked {
      border-color: $himation--input-active-border-color;
      box-shadow: 1px 0 0 $himation--input-active-border-color inset;
    } @else {
      box-shadow: 0 0 0 1px $himation--branding-text-color inset;
    }
  }

}

// Show the caller's radio/label pair as a stylized button
//
// @param <length> $padding The padding to apply to the input
// @param <boolean> $is-stacked Whether the input is stacked with others
// @param <string> $label-display The display type to use for the label
@mixin himation--radio-button-container($padding: 1em, $is-stacked: false, $label-display: block) {
  @include himation--boolean-label-pair($padding, $is-stacked, $label-display);
}

// Show the caller's checkbox/label pair as a stylized checkbox
//
// @param <length> $padding The padding to apply to the input
// @param <length> $checkbox-size The size of the checkbox
// @param <boolean> $is-stacked Whether the input is stacked with others
// @param <string> $label-display The display type to use for the label
@mixin himation--checkbox-container($padding: 1em, $checkbox-size: 0.75em, $is-stacked: false, $label-display: block) {
  @include himation--boolean-label-pair($padding, $is-stacked, $label-display);

  label {
    padding-left: $padding * 2 + $checkbox-size;
    position: relative;

    &::before {
      background-color: $himation--page-bg-color;
      border: 2px solid currentColor;
      content: "";
      display: block;
      height: $checkbox-size;
      left: $padding;
      margin-top: -0.5em;
      position: absolute;
      top: 50%;
      width: $checkbox-size;
    }
  }

  input:checked + label {
    &::before {
      background-color: $himation--input-active-border-color;
      border-color: $himation--input-active-border-color;
    }

    &::after {
      border: 0.125em solid currentColor;
      border-right: 0;
      border-top: 0;
      content: "";
      height: $checkbox-size * 0.25;
      left: $padding + $checkbox-size * 0.25;
      margin-top: -0.25em;
      position: absolute;
      top: 50%;
      transform: rotate(-45deg);
      width: $checkbox-size * 0.75;
    }
  }
}

// Show the caller's input/label pair using consistent styles
//
// @param <length> $spacing The distance between the label and its input
@mixin himation--input-container($spacing: 0.5em) {

  label {
    cursor: pointer;
    font-weight: $himation--font-weight-semi-bold;
    margin-right: 0.5em;
  }

  input {
    background-color: $himation--input-bg-color;
    border: 1px solid $himation--input-border-color;
    outline: 0;

    &:hover,
    &:focus {
      border-color: darken($himation--input-border-color, 10%);
    }
  }

}

// Show the caller as an absolutely positioned error popover
//
// @param <length> $size The font size for the popover
// @param <length> $triangle-size The size of the triangle to show below the popover
// @param <length> $elevation The elevation to use for the popover's shadow
// @param <color> $shadow-color The color for the popover's shadow
// @param <boolean> $is-attached Whether the popover is attached to an element
@mixin himation--error-popover($size: 1.25em, $triangle-size: 0.5em, $elevation: 0.25em, $shadow-color: rgba(0, 0, 0, 0.375), $is-attached: false) {
  @include himation--font-stack-serif;
  background-color: $himation--form-error-bg-color;
  border: 1px solid darken($himation--form-error-bg-color, 15%);
  box-shadow: 0 $elevation $elevation * 2 $shadow-color;
  box-sizing: border-box;
  color: $himation--form-error-text-color;
  font-size: $size;
  font-style: italic;
  line-height: 1.25;
  padding: 1em;
  position: absolute;
  text-align: center;
  z-index: $himation--z-overlay;

  @if not $is-attached {
    left: 25%;
    right: 25%;

    @include himation--breakpoint-tablet {
      left: 10%;
      right: 10%;
    }

    @include himation--breakpoint-phone {
      left: 0;
      right: 0;
    }
  }
}
