'use strict';

var find = require('lodash/find');

var BuildManifestPlugin = require('himation/config/webpack/plugins/build-manifest');
var errors = require('himation/core/errors');

/**
 * Load the manifest for a webpack build
 *
 * @param {object} config A valid webpack configuration
 * @returns {HimationBuildManifest} Details on the build
 * @throws {ConfigurationError} If a build manifest is not generated by the configuration
 * @throws {BuildError} If the build manifest cannot be loaded
 */
function loadManifest(config) {
  var plugins = config.plugins || [];
  var manifestPlugin = find(plugins, plugin => plugin.constructor === BuildManifestPlugin);

  if (!manifestPlugin) {
    throw new errors.ConfigurationError('The configuration does not use the build-manifest plugin');
  }

  try {
    return manifestPlugin.loadManifest();
  } catch (e) {
    throw new errors.BuildError('The build manifest could not be loaded: ' + e);
  }
}

module.exports = {
  loadManifest: loadManifest
};
